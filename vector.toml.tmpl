{{- range $value := . -}}
[sources.source_{{$value.Key}}]
type = "file"
include = [ "{{$value.LogDir}}" ]
line_delimiter = "\n"
read_from = "beginning"

[transforms.transform_{{$value.Key}}]
type = "remap"
inputs = ["source_{{$value.Key}}"]
source = '''
# Store Nomad metadata.
.nomad.namespace = "{{$value.Namespace}}"
.nomad.node_name = "{{$value.Node}}"
.nomad.job_name = "{{$value.Job}}"
.nomad.group_name = "{{$value.Group}}"
.nomad.task_name = "{{$value.Task}}"
.nomad.alloc_id = "{{$value.ID}}"
.nomad.job_meta_function_id = "{{$value.JobMetaFunctionId}}"
.nomad.job_meta_user_id = "{{$value.JobMetaUserId}}"
'''

[transforms.route_logs_{{$value.Key}}]
type = "route"
inputs = ["transform_{{$value.Key}}"]
route.stdout = 'contains(to_string(.file) ?? "to_string() failed", "stdout")'
route.stderr = 'contains(to_string(.file) ?? "to_string() failed", "stderr")'

# sink for stdout
[sinks.file_stdout_{{$value.Key}}]
type = "file"
inputs = ["route_logs_{{$value.Key}}.stdout"]
path = "/root/birajtest/file-sink/{{$value.Key}}.stdout.log"
encoding.codec = "json"

# sink for stderr
[sinks.file_stderr_{{$value.Key}}]
type = "file"
inputs = ["route_logs_{{$value.Key}}.stderr"]
path = "/root/birajtest/file-sink/{{$value.Key}}.stderr.log"
encoding.codec = "json"

# sink for unmatched
[sinks.file_unmatched_{{$value.Key}}]
type = "file"
inputs = ["route_logs_{{$value.Key}}._unmatched"]
path = "/root/birajtest/file-sink/{{$value.Key}}.unmatched.log"
encoding.codec = "json"
{{ end}}